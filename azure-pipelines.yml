# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  name: 'AWS Linux'
variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    pool:
      name: 'AWS Linux'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js 16.x'


    #- task: Cache@2
    #  inputs:
    #    key: 'npm | "$(Agent.OS)" | package-lock.json'
    #    restoreKeys: |
    #      npm | "$(Agent.OS)"
    #    path: $(npm_config_cache)
    #  displayName: Cache npm

    - script: | 
        npm install -g @angular/cli
        npm install
        ng build --prod
      displayName: 'npm install and build'
    
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/witryna-osobista/'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Build_Docker
  displayName: Build and push docker image
  jobs:
  - job: Build_and_push
    pool:
      name: 'AWS Linux'
    steps:
    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        containerRegistry: 'DockerHub'
        repository: 'majki741/personal-website'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: 'latest'
    - task: Docker@2
      displayName: 'Push Docker Image'
      inputs:
        containerRegistry: 'DockerHub'
        repository: 'majki741/personal-website'
        command: 'push'
        tags: 'latest'
    
- stage: Deploy
  displayName: Deploy docker to azure webapp
  jobs:
  - job: Deploy_Azure
    pool:
      name: 'AWS Linux'
    steps:
    - task: AzureWebAppContainer@1
      displayName: 'Deploy Azure WebApp Container'
      retryCountOnTaskFailure: 2
      inputs:
        azureSubscription: 'Azure_RM_RG_MGR'
        appName: personal-website-mgr-ms
        containers: 'majki741/personal-website:latest'
    #- task: AzureWebAppContainer@1
    #  displayName: 'Deploy Azure WebApp Container'
    #  retryCountOnTaskFailure: 3
    #  inputs:
    #    azureSubscription: 'Azure for Students(1d8c6de3-acbf-4ebc-ba89-85dc78fe1436)'
    #    appName: 'personal-website-mgr-ms'
    #    containers: 'majki741/personal-website:latest'
    #- task: AzureRmWebAppDeployment@4
    #  displayName: 'Deploy Azure WebApp Container'
    #  inputs:
    #    ConnectionType: 'AzureRM'
    #    azureSubscription: 'Azure for Students(1)(1d8c6de3-acbf-4ebc-ba89-85dc78fe1436)'
    #    appType: 'webAppContainer'
    #    WebAppName: 'personal-website-mgr-ms'
    #    DockerNamespace: 'majki741'
    #    DockerRepository: 'personal-website'
    #    DockerImageTag: 'latest'
        